{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shard\\\\TNP-Web\\\\src\\\\pages\\\\Event_Page.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst events = [{\n  id: 1,\n  title: \"Upcoming Event 1\",\n  date: \"2024-07-15\",\n  description: \"Description of Upcoming Event 1\"\n}, {\n  id: 2,\n  title: \"Recent Event 1\",\n  date: \"2024-05-20\",\n  description: \"Description of Recent Event 1\"\n}, {\n  id: 3,\n  title: \"Upcoming Event 2\",\n  date: \"2024-08-10\",\n  description: \"Description of Upcoming Event 2\"\n}, {\n  id: 4,\n  title: \"Recent Event 2\",\n  date: \"2024-04-10\",\n  description: \"Description of Recent Event 2\"\n}];\nconst EventPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const event = events.find(event => event.id === parseInt(id));\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Event not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", event.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: event.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(EventPage, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = EventPage;\nexport default EventPage;\nvar _c;\n$RefreshReg$(_c, \"EventPage\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","events","id","title","date","description","EventPage","_s","event","find","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/shard/TNP-Web/src/pages/Event_Page.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst events = [\r\n  {\r\n    id: 1,\r\n    title: \"Upcoming Event 1\",\r\n    date: \"2024-07-15\",\r\n    description: \"Description of Upcoming Event 1\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Recent Event 1\",\r\n    date: \"2024-05-20\",\r\n    description: \"Description of Recent Event 1\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Upcoming Event 2\",\r\n    date: \"2024-08-10\",\r\n    description: \"Description of Upcoming Event 2\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Recent Event 2\",\r\n    date: \"2024-04-10\",\r\n    description: \"Description of Recent Event 2\"\r\n  }\r\n];\r\n\r\nconst EventPage = () => {\r\n  const { id } = useParams();\r\n  const event = events.find(event => event.id === parseInt(id));\r\n\r\n  if (!event) {\r\n    return <div>Event not found</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"event-page\">\r\n      <h2>{event.title}</h2>\r\n      <p>Date: {event.date}</p>\r\n      <p>{event.description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,MAAM,GAAG,CACb;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,kBAAkB;EACzBC,IAAI,EAAE,YAAY;EAClBC,WAAW,EAAE;AACf,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,gBAAgB;EACvBC,IAAI,EAAE,YAAY;EAClBC,WAAW,EAAE;AACf,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,kBAAkB;EACzBC,IAAI,EAAE,YAAY;EAClBC,WAAW,EAAE;AACf,CAAC,EACD;EACEH,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,gBAAgB;EACvBC,IAAI,EAAE,YAAY;EAClBC,WAAW,EAAE;AACf,CAAC,CACF;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEL;EAAG,CAAC,GAAGJ,SAAS,CAAC,CAAC;EAC1B,MAAMU,KAAK,GAAGP,MAAM,CAACQ,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACN,EAAE,KAAKQ,QAAQ,CAACR,EAAE,CAAC,CAAC;EAE7D,IAAI,CAACM,KAAK,EAAE;IACV,oBAAOR,OAAA;MAAAW,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;EAEA,oBACEf,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAL,QAAA,gBACzBX,OAAA;MAAAW,QAAA,EAAKH,KAAK,CAACL;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBf,OAAA;MAAAW,QAAA,GAAG,QAAM,EAACH,KAAK,CAACJ,IAAI;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBf,OAAA;MAAAW,QAAA,EAAIH,KAAK,CAACH;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACR,EAAA,CAfID,SAAS;EAAA,QACER,SAAS;AAAA;AAAAmB,EAAA,GADpBX,SAAS;AAiBf,eAAeA,SAAS;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}